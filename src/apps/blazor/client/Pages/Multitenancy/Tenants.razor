@page "/subscribers"

@inject IAuthenticationService Authentication

<PageHeader Title="Subscribers" Header="Subscribers" SubHeader="Manage your Subscribers." />

<EntityTable @ref="EntityTable" TEntity="TenantViewModel" TId="Guid" TRequest="CreateTenantCommand" Context="@Context"
             @bind-SearchString="_searchString">
    <EditFormContent>
        @if (context.Organization == null)
            {
                context.Organization = new();
            }

        <MudItem xs="12" md="12">
            <MudTabs Outlined="false" Color="Color.Default" >
                <MudTabPanel Text="Api" Class="m-2" Icon="@Icons.Material.Filled.Api">
                    <ChildContent>
                        <!-- Wrap in MudGrid to manage layout -->
                        <MudGrid Spacing="2">
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Id)" @bind-Value="context.Id" Label="Key" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Name)" @bind-Value="context.Name" Label="Name" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Address)" @bind-Value="context.Address" Label="Address" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.AdminEmail)" @bind-Value="context.AdminEmail" Label="Admin Email" />
                            </MudItem>
                            <MudItem xs="12" md="4">
                                <FSHTextField T="string" For="@(() => context.SubscriptionType)" @bind-Value="context.SubscriptionType" Label="Subscription Type" />
                            </MudItem>
                            <MudItem xs="12" md="4">
                                <MudColorPicker @bind-Text="context.PrimaryColor" Margin="Margin.Dense" Style="@($"color: {context.PrimaryColor};")" Label="PrimaryColor" Variant="Variant.Outlined" />
                            </MudItem>
                            <MudItem xs="12" md="4">
                                <MudColorPicker @bind-Text="context.SecondaryColor" Margin="Margin.Dense" Style="@($"color: {context.SecondaryColor};")" Label="SecondaryColor" Variant="Variant.Outlined" />
                            </MudItem>
                            <MudItem xs="12" md="12">
                                <FSHTextField T="string" For="@(() => context.Logo)" @bind-Value="context.Logo" Label="LogoUrl" />
                            </MudItem>
                            <MudItem xs="12" md="12">
                                <FSHTextField T="string" For="@(() => context.ReportHeader)" @bind-Value="context.ReportHeader" Label="HeaderUrl" />
                            </MudItem>
                            <MudItem xs="12" md="12">
                                <FSHTextField T="string" For="@(() => context.ReportFooter)" @bind-Value="context.ReportFooter" Label="FooterUrl" />
                            </MudItem>
                            <MudItem xs="12" md="12">
                                <FSHTextField T="string" For="@(() => context.ConnectionString)" HelperText="To use default connection string, leave this field blank." @bind-Value="context.ConnectionString" Label="Connection String" />
                            </MudItem>
                        </MudGrid>
                    </ChildContent>
                    <TabContent>
                        <MudText>Subscriber</MudText>
                    </TabContent>
                </MudTabPanel>

                <MudTabPanel Text="Bug Report" Icon="@Icons.Material.Filled.BugReport">
                    <ChildContent>
                        <!-- Wrap in MudGrid to manage layout -->
                        <MudGrid Spacing="2">
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.CommonName)" @bind-Value="context.Id" Label="CommonName" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.SerialNumber)" @bind-Value="context.Id" Label="SerialNumber" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.OrganizationIdentifier)" @bind-Value="context.Id" Label="OrganizationIdentifier" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.IdentifierType)" @bind-Value="context.Id" Label="IdentifierType" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.OrganizationUnitName)" @bind-Value="context.Id" Label="OrganizationUnitName" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.OrganizationName)" @bind-Value="context.Id" Label="OrganizationName" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.CountryName)" @bind-Value="context.Id" Label="CountryName" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.LocationAddress)" @bind-Value="context.Id" Label="LocationAddress" />
                            </MudItem>
                            <MudItem xs="12" md="6">
                                <FSHTextField T="string" For="@(() => context.Organization.IndustryBusinessCategory)" @bind-Value="context.Id" Label="IndustryBusinessCategory" />
                            </MudItem>
                        </MudGrid>
                    </ChildContent>
                    <TabContent>
                        <MudText>Organization Info</MudText>
                    </TabContent>
                </MudTabPanel>

            </MudTabs>
        </MudItem>
    </EditFormContent>

    <ExtraActions>
        @if (_canUpgrade)
        {
            <MudMenuItem OnClick="@(() => ViewUpgradeSubscriptionModalAsync(context.Id))">Upgrade Subscription</MudMenuItem>
        }
        <MudMenuItem OnClick="@(() => ViewTenantDetails(context.Id))">
            @((context.ShowDetails == true) ? "Hide" : "Show") Tenant Details
        </MudMenuItem>
        @if (_canModify)
        {
            @if (!context.IsActive)
            {
                <MudMenuItem Style="color:limegreen!important" OnClick="@(() => ActivateTenantAsync(context.Id))">Activate Tenant</MudMenuItem>
            }
            else
            {
                <MudMenuItem Style="color:red!important" OnClick="@(() => DeactivateTenantAsync(context.Id))">Deactivate Tenant</MudMenuItem>
            }
        }
    </ExtraActions>

    <ChildRowContent>
        @if (context.ShowDetails)
        {
            <MudTr>
                <td colspan="6">
                    <MudCard Outlined style="margin: 10px !important;">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudAlert Severity="Severity.Info" typo="Typo.body1">
                                    Details for Tenant :
                                    <strong>@context.Id</strong>
                                </MudAlert>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <table class="mud-table-root">
                                <tbody class="mud-table-body">
                                    <tr class="mud-table-row">
                                        @if (string.IsNullOrEmpty(context.ConnectionString?.Trim()))
                                        {
                                            <MudChip T="string" Label="true" Color="Color.Secondary">Shared Database</MudChip>
                                        }
                                        else
                                        {
                                            <td>Connection String</td>
                                            <td>
                                                <MudItem>
                                                    <MudChip T="string" Label="true" Color="Color.Primary">@context.ConnectionString?.Trim()</MudChip>
                                                </MudItem>
                                            </td>
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </MudCardContent>
                    </MudCard>
                </td>
            </MudTr>
        }
    </ChildRowContent>

</EntityTable>