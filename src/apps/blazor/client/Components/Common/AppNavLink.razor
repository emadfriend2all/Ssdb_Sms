@inject NavigationManager Navigation

<div class="custom-nav-link" @onmouseover="ShowButton" @onmouseout="HideButton">
    <MudNavLink Href="@Href" Icon="@Icon" Class="nav-link" IconColor="Color.Inherit">
        @ChildContent
    </MudNavLink>
    <MudIconButton Icon="@Icons.Material.Filled.Add" 
                   Color="Color.Primary"
                   Size="Size.Small"
                   Class="add-button"
                   OnClick="NavigateToCreate"
                   @attributes="AdditionalAttributes"
                   style="@(isHovered ? "opacity: 1;" : "opacity: 0; pointer-events: none;")" />
</div>

@code {
    [Parameter] public string Href { get; set; }
    [Parameter] public string? Icon { get; set; }
    [Parameter] public string? CreatePage { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public Dictionary<string, object>? AdditionalAttributes { get; set; }

    private bool isHovered = false;

    private void ShowButton() => isHovered = true;
    private void HideButton() => isHovered = false;

    private void NavigateToCreate()
    {
        if (!string.IsNullOrEmpty(CreatePage))
        {
            Navigation.NavigateTo(CreatePage);
        }
    }
}

    <style>
    .custom-nav-link {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
    }

    .nav-link {
        flex-grow: 1;
    }

    .custom-nav-link:hover {
        background-color: var(--mud-palette-hover); 
    }

    .add-button {
        transition: opacity 0.2s ease-in-out;
        margin-left: auto;
        margin-inline-end: 5px;
    }

    </style>